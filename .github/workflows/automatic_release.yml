name: 'Automatic Release'

on:
    push:
        tags:
            - 'v*'
        branches: ['main']

jobs:
    build:
        runs-on: ${{ matrix.config.os }}
        strategy:
            matrix:
                config:
                    - os: ubuntu-latest
                      ext: ''
                    - os: macos-latest
                      ext: ''
                    - os: windows-latest
                      ext: '.exe'
        steps:
            - name: 'Checkout'
              uses: actions/checkout@v4
            - name: 'Setup vcpkg'
              run: ./install_vcpkg.sh
            - name: 'Binary build x86'
              run: 'set VCPKG_TARGET_ARCHITECTURE=x86 && cd output && bash build_release.sh && cd release && mv r-type_client${{ matrix.config.ext }} r-type_client_x86-${{ matrix.config.os }}${{ matrix.config.ext }} && mv r-type_server${{ matrix.config.ext }} r-type_server_x86-${{ matrix.config.os }}${{ matrix.config.ext }}'
            - name: 'Binary build x64'
              run: 'set VCPKG_TARGET_ARCHITECTURE=x64 && cd output && bash build_release.sh && cd release && mv r-type_client${{ matrix.config.ext }} r-type_client_x64-${{ matrix.config.os }}${{ matrix.config.ext }} && mv r-type_server${{ matrix.config.ext }} r-type_server_x64-${{ matrix.config.os }}${{ matrix.config.ext }}'
            - name: 'Binary build aarch64'
              run: 'set VCPKG_TARGET_ARCHITECTURE=arm64 && cd output && bash build_release.sh && cd release && mv r-type_client${{ matrix.config.ext }} r-type_client_aarch64-${{ matrix.config.os }}${{ matrix.config.ext }} && mv r-type_server${{ matrix.config.ext }} r-type_server_aarch64-${{ matrix.config.os }}${{ matrix.config.ext }}'
            - name: 'Upload binaries'
              uses: actions/upload-artifact@v3
              with:
                  path: output/release

    upload:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: 'Checkout'
              uses: actions/checkout@v4
            - name: 'Download built binaries'
              uses: actions/download-artifact@v3
              with:
                  path: 'output/release'
            - name: 'Pack binaries'
              run: 'cd output/release && tar -czf release.tar.gz *'
            - name: 'Publish Release'
              uses: softprops/action-gh-release@v1
              with:
                token: ${{ secrets.API_TOKEN_GITHUB }}
                files: 'output/release/release.tar.gz'
                tag_name: ${{ github.ref }}
                body: |
                    Release ${{ github.ref }}
                    ---
                    Automatic release by GitHub Actions
